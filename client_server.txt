Несколько следующих методов HTTP безопасные: GET, HEAD или OPTIONS
1) Прочитать про клиент-серверную архитектуру
2) Что такое HTTP и HTTPS
HTTP-протокол прикладного уровня передачи данных между клиентом (веб-браузером) и веб-сервером.
HTTPS-тот же то только работает через шифровальные транспортные механизмы SSL и TLS. Обеспечивает защиту от атак, основанных на прослушивании сетевого соединения.

3) HTTP методы:
POST-создать новую запись в базе, обновить. Для отправки данных на сервер.
PUT-обновляет или создает в существующем ресурсе. В требовании изменения должен быть задан уникальный ID указанного ресурса. Чтобы изменить ресурс структуры объекта, надо указать ID главного объекта.
PUT является идемпотентным, т.е. единичный и множественные вызовы этого метода, с идентичным набором данных, будут иметь тот же результат выполнения (без сторонних эффектов), в случае с POST, множественный вызов с идентичным набором данных может повлечь за собой сторонние эффекты.
GET-получить информацию (новости, список книг и тд)
PATCH-частично изменяет информацию
DELETE-удалить информацию
OPTIONS -используется для описания параметров соединения с целевым ресурсом. Клиент может указать особый URL для обработки метода OPTIONS, или * (звёздочку) чтобы указать весь сервер целиком.

4) HTTP статус коды сервера
100е-информируют о процессе передачи запроса
200е-запросы успеха, запрос успешно получен, понятен обработан
300е-перенаправление. Необходимо отправить запрос на другой URL
400е-запрос имеет плохой синтаксис или не может быть выполнен
400-bad Request- сервер не понимает, что вы хотите
401-Unauthorized- нужно залогиниться
402-Payment Required — предполагается использовать в будущем. В настоящий момент не используется. Этот код предусмотрен для платных пользовательских сервисов, а не для хостинговых компаний. Имеется в виду, что эта ошибка не будет выдана хостинговым провайдером в случае просроченной оплаты его услуг.
403-Forbiden- у клиента нет доступа к контенту
404-Not Found-ошибка в написании адреса веб-страницы 
405-Metod Not Allowed
500е-сервер не в состоянии выполнить допустимый запрос
503-обслуживание ,перезагрузка сервера и прочее

5) Что такое ядро браузера -представляет собой программу, преобразующую содержимое веб-страниц (файлы HTML, XML, цифровые изображения и т. д.) и информацию о форматировании (в форматах CSS, XSL и т. д.) в интерактивное изображение форматированного содержимого на экране. 

6) Какие браузеры какие ядра используют
Blink: Google
Gecko: Mozilla
WebKit: Apple
EdgeHTML: Microsoft

7) Что такое API-способ взаимодействия одной системы с другой

8) Что такое ендпоинты -это само обращение к маршруту отдельным HTTP методом. Эндпоинт выполняют конкретную задачу, принимают параметры и возвращают данные Клиенту.
Чтобы связаться с API, нужно отправить ему запрос. Для корректной обработки запроса клиент должен предоставить универсальный указатель ресурса (URL), метод (HTTP method), и в зависимости от метода добавить заголовки (headers), тело (body), параметры запроса. Заголовки предоставляют метаданные о запросе, а тело содержит данные, например, поля для новой строки в базе данных.

9) URL -определитель местонахождения ресурса (Http://appnet.by)
URI — последовательность символов, идентифицирующая абстрактный или физический ресурс(адрес целиком)
URN-единообразное название (имя) ресурса (после URL)

10) Идемпотентные HTTP методы
Метод HTTP является идемпотентным, если повторный идентичный запрос, сделанный один или несколько раз подряд, имеет один и тот же эффект, не изменяющий состояние сервера.  GET, HEAD, PUT и DELETE идемпотентны, но не метод POST. Также все безопасные методы являются идемпотентными.

11) Безопасные HTTP методы
Метод HTTP является безопасным, если он не меняет состояние сервера. Несколько следующих методов HTTP безопасные: GET, HEAD или OPTIONS.

12) -Иденфикация- процесс распознавания пользователя по его идентификатору(логин).Если пользователь в качестве идентификатора ввел «Александр Петров», и система нашла в своей базе запись о пользователе с таким именем, то идентификация завершилась.
-Аутентификация-процедура проверки подлинности, доказательство что пользователь именно тот, за кого себя выдает (пароль)
-Авторизация-наделение определенными правами

13) Что такое IP-уникальный сетевой адрес узла (компьютера) в компьютерной сети.
IP-адрес- это строка чисел разделённых точками. IP-адреса представляют собой набор из четырех чисел , например 192.158.7.56. Каждое число в этом наборе принадлежит интервалу от 0 до 255. 

14) Что такое октаты в DNS
DNS-комп-ная система для получения инф-ции о доменах, одной из функций которой является получение IP-адреса по имени хоста (компа)

15) Что такое порт - это числовой идентификатор программы или процесса(8080, 8888), которые обслуживают сетевые соединения на заданном сетевом адресе (IP-адресе). Представьте, что у вас дома 2 компьютера и они подключены к одному роутеру. Для всего интернета IP адрес этих компьютеров одинаковый (так как внешний IP, который виден в интернете есть только у роутера). В этом случае, чтобы обратиться к конкретному компьютеру, нужен порт. Например, на роутере настроено, что у одного из компьютеров открыт порт 8245. Роутер имеет IP 95.84.208.79. Тогда обратиться к этому компьютеру можно так:
95.84.208.79:8245
IP адрес — это номер квартиры друга.
Порт — это комната, в которой живёт друг, сколько портов у Linux сервера
16) Уровни OSI:
7.Прикладной уровень -обеспеч.взаимодействие пользователя с сетью
6.Уровень представления-обеспеч. Преобразование данных с прикладного ур-ня
5.Сеансовый уровень-отвечает за поддержание сеанса связи
4.Транспортный уровень-гарантия того что ин-фа доходит до клиента 
3.Сетевой уровень-для определения пути передачи данных
2.Канальный уровень-для обеспечение взаимодействия сетей на физич.уровне
1.Физический уровень-определяет метод передачи от одного устр-ва к другому(блютуз,витая пара)
OSI-сетевая модель стека сетевых протоколов (OSI/ISO), кот.определяет как различные сетевые устройства будут обмениваться данными

17) Хедеры http запросов– это специальные параметры, которые несут определенную служебную информацию о соединении по HTTP. Некоторые заголовки имеют лишь информационный характер для пользователя или для компьютера, другие передают определенные команды, исходя из которых, сервер или клиент будет выполнять какие-то действия.
В зависимости от того, где эти заголовки могут находиться, они разделяются на:

General Headers (Основные заголовки) — должны быть и в запросах и в ответах клиента и сервера.

Request Headers (Заголовки запроса) — используются только в запросах клиента.

Response Headers (Заголовки ответа) — используются только в ответах сервера.

Entity Headers (Заголовки сущности) — сопровождают каждую сущность сообщения.

Параметр: значение